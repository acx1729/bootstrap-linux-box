---
- name: Bootstrap Linux Box Locally
  hosts: localhost
  become: yes
  connection: local
  vars:
    group_name: wheel-opencomply
    new_username: anil
    # It's highly recommended to use Ansible Vault for handling passwords securely.
    # Replace 'YourSecurePasswordHere' with the actual password or handle it securely using Ansible Vault
    new_user_password: "{{ 'YourSecurePasswordHere' | password_hash('sha512') }}"
    # Shared SSH public key for both root and anil
    shared_public_key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILNPFEWjsJmdUpOSSlqxU6lRx8cIGm1bIzVCG5847SBj acx@cri.to"
  tasks:

    # 1. Ensure the group "wheel-opencomply" exists
    - name: Ensure the group "{{ group_name }}" exists
      group:
        name: "{{ group_name }}"
        state: present

    # 2. Configure sudoers for "wheel-opencomply" with no password
    - name: Configure sudoers for "{{ group_name }}" with no password
      copy:
        dest: "/etc/sudoers.d/{{ group_name }}"
        content: "%{{ group_name }} ALL=(ALL) NOPASSWD: ALL\n"
        owner: root
        group: root
        mode: '0440'
      validate: '/usr/sbin/visudo -cf %s'

    # 3. Ensure SSH directory exists for root
    - name: Ensure SSH directory exists for root
      file:
        path: /root/.ssh
        state: directory
        mode: '0700'
        owner: root
        group: root

    # 4. Add shared public key to root's authorized_keys
    - name: Add shared public key to root's authorized_keys
      authorized_key:
        user: root
        state: present
        key: "{{ shared_public_key }}"

    # 5. Configure SSH to disable password authentication
    - name: Configure SSH to disable password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        notify: Restart SSH

    # 6. Configure SSH to disable root login
    - name: Configure SSH to disable root login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
        notify: Restart SSH

    # 7. Ensure SSH only allows key-based authentication
    - name: Ensure SSH only allows key-based authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?ChallengeResponseAuthentication'
        line: 'ChallengeResponseAuthentication no'
        notify: Restart SSH

    # 8. Create user "anil" and add to "wheel-opencomply" group
    - name: Create user "{{ new_username }}"
      user:
        name: "{{ new_username }}"
        groups: "{{ group_name }}"
        append: yes
        shell: /bin/bash
        state: present
        password: "{{ new_user_password }}"

    # 9. Ensure SSH directory exists for "anil"
    - name: Ensure SSH directory exists for "{{ new_username }}"
      file:
        path: "/home/{{ new_username }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"

    # 10. Add shared public key to "anil"'s authorized_keys
    - name: Add shared public key to "{{ new_username }}"'s authorized_keys
      authorized_key:
        user: "{{ new_username }}"
        state: present
        key: "{{ shared_public_key }}"

    # 11. Ensure correct permissions for "anil"'s authorized_keys
    - name: Ensure correct permissions for "{{ new_username }}"'s authorized_keys
      file:
        path: "/home/{{ new_username }}/.ssh/authorized_keys"
        mode: '0600'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"

    # 12. Set permissions for root's SSH private keys (if any)
    - name: Ensure root's SSH private keys have correct permissions
      file:
        path: "/root/.ssh/{{ item }}"
        mode: '0600'
        owner: root
        group: root
      loop:
        - id_ed25519
        - id_rsa
        - id_dsa
        - identity
      when: 
        - lookup('file', "/root/.ssh/{{ item }}", errors='ignore') != ""

    # 13. Set permissions for root's SSH public keys (if any)
    - name: Ensure root's SSH public keys have correct permissions
      file:
        path: "/root/.ssh/{{ item }}"
        mode: '0644'
        owner: root
        group: root
      loop:
        - id_ed25519.pub
        - id_rsa.pub
        - id_dsa.pub
        - identity.pub
      when:
        - lookup('file', "/root/.ssh/{{ item }}", errors='ignore') != ""

    # 14. Set permissions for "anil"'s SSH private keys (if any)
    - name: Ensure "{{ new_username }}"'s SSH private keys have correct permissions
      file:
        path: "/home/{{ new_username }}/.ssh/{{ item }}"
        mode: '0600'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"
      loop:
        - id_ed25519
        - id_rsa
        - id_dsa
        - identity
      when: 
        - lookup('file', "/home/{{ new_username }}/.ssh/{{ item }}", errors='ignore') != ""

    # 15. Set permissions for "anil"'s SSH public keys (if any)
    - name: Ensure "{{ new_username }}"'s SSH public keys have correct permissions
      file:
        path: "/home/{{ new_username }}/.ssh/{{ item }}"
        mode: '0644'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"
      loop:
        - id_ed25519.pub
        - id_rsa.pub
        - id_dsa.pub
        - identity.pub
      when:
        - lookup('file', "/home/{{ new_username }}/.ssh/{{ item }}", errors='ignore') != ""

  handlers:
    - name: Restart SSH
      service:
        name: sshd
        state: restarted
