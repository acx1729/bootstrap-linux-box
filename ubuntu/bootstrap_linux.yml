---
- name: Bootstrap Linux Box Locally
  hosts: localhost
  become: true  # Changed from 'yes' to 'true' to adhere to YAML boolean standards
  connection: local

  vars:
    group_name: wheel-opencomply
    new_username: anil
    root_user_password: "$6$KbQ7i3eXx5xGJ0qO$uW5nI1eZ1fZ9O8G8Yk6j9P1rF8dG5aXJ7Qm0Z1kL9yT8eD3V2bC1xZ4lM5nP6"
    new_user_password: "$6$AbC123XyZ$D9eF1gH2iJ3kL4mN5oP6qR7sT8uV9wX0yZ1aB2cD3eF4gH5iJ6kL7mN8oP9"
    shared_public_key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILNPFEWjsJmdUpOSSlqxU6lRx8cIGm1bIzVCG5847SBj acx@cri.to"

  tasks:
    - name: Ensure the group "{{ group_name }}" exists
      group:
        name: "{{ group_name }}"
        state: present

    - name: Configure sudoers for "{{ group_name }}" with no password
      copy:
        dest: "/etc/sudoers.d/{{ group_name }}"
        content: |
          %{{ group_name }} ALL=(ALL) NOPASSWD: ALL
        owner: root
        group: root
        mode: '0440'
        validate: '/usr/sbin/visudo -cf %s'
      delegate_to: localhost

    - name: Ensure SSH directory exists for root
      file:
        path: /root/.ssh
        state: directory
        mode: '0700'
        owner: root
        group: root

    - name: Add shared public key to root's authorized_keys
      authorized_key:
        user: root
        state: present
        key: "{{ shared_public_key }}"
      delegate_to: localhost

    - name: Configure SSH to disable password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
      notify: Restart SSH

    - name: Configure SSH to disable root login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'
      notify: Restart SSH

    - name: Ensure SSH only allows challenge-response authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?ChallengeResponseAuthentication'
        line: 'ChallengeResponseAuthentication no'
      notify: Restart SSH

    - name: Reset root user's password
      user:
        name: root
        password: "{{ root_user_password }}"
        update_password: always

    - name: Create user "{{ new_username }}" and add to "{{ group_name }}" group
      user:
        name: "{{ new_username }}"
        groups: "{{ group_name }}"
        append: true  # Changed from 'yes' to 'true' to adhere to YAML boolean standards
        shell: /bin/bash
        state: present
        password: "{{ new_user_password }}"
      delegate_to: localhost

    - name: Ensure SSH directory exists for "{{ new_username }}"
      file:
        path: "/home/{{ new_username }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"

    - name: Add shared public key to "{{ new_username }}"'s authorized_keys
      authorized_key:
        user: "{{ new_username }}"
        state: present
        key: "{{ shared_public_key }}"
      delegate_to: localhost

    - name: Ensure correct permissions for "{{ new_username }}"'s authorized_keys
      file:
        path: "/home/{{ new_username }}/.ssh/authorized_keys"
        mode: '0600'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"

    - name: Ensure root's SSH private keys have correct permissions
      file:
        path: "/root/.ssh/{{ item }}"
        mode: '0600'
        owner: root
        group: root
      loop:
        - id_ed25519
        - id_rsa
        - id_dsa
        - identity
      when:
        - lookup('file', "/root/.ssh/{{ item }}", errors='ignore') != ""

    - name: Ensure root's SSH public keys have correct permissions
      file:
        path: "/root/.ssh/{{ item }}"
        mode: '0644'
        owner: root
        group: root
      loop:
        - id_ed25519.pub
        - id_rsa.pub
        - id_dsa.pub
        - identity.pub
      when:
        - lookup('file', "/root/.ssh/{{ item }}", errors='ignore') != ""

    - name: Ensure "{{ new_username }}"'s SSH private keys have correct permissions
      file:
        path: "/home/{{ new_username }}/.ssh/{{ item }}"
        mode: '0600'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"
      loop:
        - id_ed25519
        - id_rsa
        - id_dsa
        - identity
      when:
        - lookup('file', "/home/{{ new_username }}/.ssh/{{ item }}", errors='ignore') != ""

    - name: Ensure "{{ new_username }}"'s SSH public keys have correct permissions
      file:
        path: "/home/{{ new_username }}/.ssh/{{ item }}"
        mode: '0644'
        owner: "{{ new_username }}"
        group: "{{ group_name }}"
      loop:
        - id_ed25519.pub
        - id_rsa.pub
        - id_dsa.pub
        - identity.pub
      when:
        - lookup('file', "/home/{{ new_username }}/.ssh/{{ item }}", errors='ignore') != ""

  handlers:
    - name: Restart SSH
      service:
        name: sshd
        state: restarted
